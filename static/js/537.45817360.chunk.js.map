{"version":3,"file":"static/js/537.45817360.chunk.js","mappings":"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","sources":["hooks/useScreenSizeHook/useScreenSizeHook.ts","hooks/reduxHooks/reduxHooks.ts","components/SearchBar/styles.ts","components/SearchBar/SearchBar.tsx","components/Button/styles.ts","components/Button/Button.tsx","components/CityForecastCard/styles.ts","components/CityForecastCard/CityForecastCard.tsx","localStorage/types.ts","pages/main/styles.ts","pages/main/index.tsx","localStorage/index.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport enum SCREEN_TYPES {\n  DESKTOP,\n  MOBILE,\n  TABLET,\n}\n\nconst getWindowDimensions = () => ({ width: window.innerWidth, height: window.innerHeight });\n\nconst useScreenSizeHook = () => {\n  const [windowDimensions, setWindowDimensions] = useState<{ width: number; height: number }>(getWindowDimensions());\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout | number;\n\n    const handleResize = () => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => setWindowDimensions(getWindowDimensions()), 1000);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  let screenType;\n  if ((windowDimensions.width / 120) * 100 < windowDimensions.height) {\n    if (windowDimensions.width < 1050 && windowDimensions.width >= 500) {\n      screenType = SCREEN_TYPES.TABLET;\n    } else {\n      screenType = SCREEN_TYPES.MOBILE;\n    }\n  } else {\n    screenType = SCREEN_TYPES.DESKTOP;\n  }\n\n  return { screenType };\n};\n\nexport default useScreenSizeHook;\n\n","import { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\r\n\r\nimport { RootState, AppDispatch } from '../../store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import styled from 'styled-components';\r\nimport { SCREEN_TYPES } from '../../hooks/useScreenSizeHook/useScreenSizeHook';\r\n\r\nexport const Wrapper = styled.div<{ screenType: SCREEN_TYPES }>`\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    margin: ${({ screenType }) => (screenType === SCREEN_TYPES.DESKTOP ? '0 0 0.8vw 0' : '0 0 3.6vw 0')};\r\n`;\r\n\r\nexport const Input = styled.input<{ screenType: SCREEN_TYPES }>`\r\n    width: 100%;\r\n    height: ${({ screenType }) => (screenType === SCREEN_TYPES.DESKTOP ? 3.4 : 12)}vw;\r\n\r\n    border: 1px solid #66A5AD;\r\n    border-radius: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? 0.8 : 1.6}vw;\r\n\r\n    padding: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? '0.4vw 1.6vw' : '1.6vw 6.4vw'};\r\n    margin: 0;\r\n    outline: none;\r\n\r\n    box-sizing: border-box;\r\n\r\n    transition: all 0.15s linear;\r\n\r\n    &:focus {\r\n        transition: all 0.15s linear;\r\n\r\n        border-color: #003B46;\r\n    }\r\n`;\r\n\r\nexport const ListWrapper = styled.div<{ visibility: boolean, screenType: SCREEN_TYPES }>`\r\n    position: absolute;\r\n    top: ${({ screenType }) => (screenType === SCREEN_TYPES.DESKTOP ? 3.8 : 13.6)}vw;\r\n    left: 0;\r\n\r\n    width: 100%;\r\n\r\n    background-color: #66A5AD;\r\n\r\n    border-radius: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? 0.8 : 1.6}vw;\r\n\r\n    padding: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? 0.8 : 3.2}vw;\r\n\r\n    box-sizing: border-box;\r\n\r\n    transition: all 0.15s linear;\r\n\r\n    visibility: ${({ visibility }) => (visibility ? 'visible' : 'hidden')};\r\n    opacity: ${({ visibility }) => (visibility ? 1 : 0)};\r\n    pointer-events: ${({ visibility }) => (visibility ? 'all' : 'none')};\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n\r\n    width: 100%;\r\n\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const ListElement = styled.li<{ withMargin: boolean, screenType: SCREEN_TYPES }>`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    width: 100%;\r\n\r\n    background-color: #FFFFFF;\r\n\r\n    border: 1px solid #66A5AD;\r\n    border-radius: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? 0.8 : 1.6}vw;\r\n\r\n    padding: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? 0.8 : 3.2}vw;\r\n    margin: ${({ withMargin, screenType }) =>\r\n            (withMargin ? `${screenType === SCREEN_TYPES.DESKTOP ? '0 0 0.4vw 0' : '0 0 1.6vw 0'}` : '0')};\r\n\r\n    cursor: pointer;\r\n\r\n    box-sizing: border-box;\r\n\r\n    transition: all 0.15s linear;\r\n\r\n    &:hover {\r\n        transition: all 0.15s linear;\r\n\r\n        background-color: #C5DFE6;\r\n    }\r\n`;\r\n\r\nexport const ListImg = styled.img<{ screenType: SCREEN_TYPES }>`\r\n    width: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? 1.2 : 3.6}vw;\r\n\r\n    margin: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? '0 0 0 0.4vw' : '0 0 0 1.6vw'};\r\n`;\r\n\r\nexport const DefaultElement = styled.span<{ screenType: SCREEN_TYPES }>`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    width: 100%;\r\n\r\n    background-color: #FFFFFF;\r\n\r\n    border: 1px solid #66A5AD;\r\n    border-radius: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? 0.8 : 1.6}vw;\r\n\r\n    padding: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? '0.8vw 1.6vw' : '3.2vw'};\r\n    margin: 0;\r\n\r\n    box-sizing: border-box;\r\n`;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { SCREEN_TYPES } from '../../hooks/useScreenSizeHook/useScreenSizeHook';\r\nimport { CityData } from '../../types/api';\r\n\r\nimport { DefaultElement, Input, List, ListElement, ListImg, ListWrapper, Wrapper } from './styles';\r\n\r\ninterface ISearchBar {\r\n  value: string;\r\n  handleChange: (value: string) => void;\r\n  searchList: CityData[];\r\n  handleClick: (cityId: number) => void;\r\n  screenType: SCREEN_TYPES;\r\n}\r\n\r\nconst SearchBar = ({ value, handleChange, searchList, handleClick, screenType }: ISearchBar) => {\r\n  const inputRef = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper screenType={screenType}>\r\n      <Input\r\n        placeholder=\"Search for a city ...\"\r\n        value={value}\r\n        onChange={(e) => handleChange(e.target.value)}\r\n        ref={inputRef}\r\n        className={`${screenType === SCREEN_TYPES.DESKTOP ? 'text-l' : 'text-l-mob'}`}\r\n        screenType={screenType}\r\n      />\r\n\r\n      <ListWrapper visibility={value.length > 0} screenType={screenType}>\r\n        {(value.length > 0 && searchList.length === 0) ? (\r\n          <DefaultElement screenType={screenType}\r\n                          className={`${screenType === SCREEN_TYPES.DESKTOP ? 'text-m' : 'text-m-mob'}`}>\r\n            Nothing found\r\n          </DefaultElement>\r\n        ) : (\r\n          <List>\r\n            {searchList.map((result, index, array) => (\r\n              <ListElement key={result.id} onClick={() => handleClick(result.id)}\r\n                           withMargin={index !== array.length - 1} screenType={screenType}\r\n                           className={`${screenType === SCREEN_TYPES.DESKTOP ? 'text-m' : 'text-m-mob'}`}>\r\n                <span>{result.name}</span>\r\n                <ListImg\r\n                  src={`https://openweathermap.org/images/flags/${result.sys.country.toLowerCase()}.png`}\r\n                  alt=\"Flag\" title=\"Flag\" aria-label=\"Flag\"\r\n                  screenType={screenType}\r\n                />\r\n              </ListElement>\r\n            ))}\r\n          </List>\r\n        )}\r\n      </ListWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import styled from 'styled-components';\r\nimport { SCREEN_TYPES } from '../../hooks/useScreenSizeHook/useScreenSizeHook';\r\n\r\nexport const Wrapper = styled.button<{ screenType: SCREEN_TYPES }>`\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    background-color: #C5DFE6;\r\n\r\n    border-radius: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? 0.8 : 1.6}vw;\r\n\r\n    border: 1px solid #66A5AD;\r\n    outline: 0;\r\n    margin: 0;\r\n    padding: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? '0.4vw 0.8vw' : '1.6vw 3.2vw'};\r\n    \r\n    text-transform: uppercase;\r\n\r\n    transition: all 0.15s linear;\r\n\r\n    &:hover {\r\n        transition: all 0.15s linear;\r\n\r\n        background-color: #66A5AD;\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport useScreenSizeHook from '../../hooks/useScreenSizeHook/useScreenSizeHook';\r\n\r\nimport { Wrapper } from './styles';\r\n\r\ninterface IButton {\r\n  text: string;\r\n  onClick: () => void;\r\n  className?: string;\r\n}\r\n\r\nconst Button = ({ text, onClick, className }: IButton) => {\r\n  const { screenType } = useScreenSizeHook();\r\n\r\n  return (\r\n    <Wrapper onClick={onClick} className={className} screenType={screenType}\r\n             title={text} aria-label={text}>\r\n      {text}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Button;","import styled from 'styled-components';\r\nimport { SCREEN_TYPES } from '../../hooks/useScreenSizeHook/useScreenSizeHook';\r\n\r\nexport const Wrapper = styled.div<{ screenType: SCREEN_TYPES }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n\r\n    width: 100%;\r\n\r\n    margin: ${({ screenType }) => (screenType === SCREEN_TYPES.DESKTOP ? '0 0 0.8vw 0' : '0 0 3.6vw 0')};\r\n`;\r\n\r\nexport const TitleWrapper = styled.div<{ screenType: SCREEN_TYPES }>`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    width: 100%;\r\n\r\n    margin: ${({ screenType }) => (screenType === SCREEN_TYPES.DESKTOP ? '0 0 0.8vw 0' : '0 0 3.6vw 0')};\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n\r\n    width: 100%;\r\n\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const ListElement = styled.li<{ withMargin: boolean, screenType: SCREEN_TYPES }>`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    width: 100%;\r\n\r\n    background-color: #FFFFFF;\r\n\r\n    border: 1px solid #66A5AD;\r\n    border-radius: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? 0.8 : 1.6}vw;\r\n\r\n    padding: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? '0.8vw 1.6vw' : '3.2vw'};\r\n    margin: ${({ withMargin, screenType }) =>\r\n            (withMargin ? `${screenType === SCREEN_TYPES.DESKTOP ? '0 0 0.4vw 0' : '0 0 1.6vw 0'}` : '0')};\r\n\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const Element = styled.div<{ screenType: SCREEN_TYPES }>`\r\n    margin: ${({ screenType }) => (screenType === SCREEN_TYPES.DESKTOP ? '0 0.4vw 0 0' : '0 1.6vw 0 0')};\r\n\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const ElementImg = styled.img`\r\n    width: 100%;\r\n    height: auto;\r\n`;","import React from 'react';\r\n\r\nimport Button from '../Button/Button';\r\n\r\nimport { Forecast, ForecastList } from '../../types/api';\r\n\r\nimport { SCREEN_TYPES } from '../../hooks/useScreenSizeHook/useScreenSizeHook';\r\n\r\nimport { Element, ElementImg, List, ListElement, Title, TitleWrapper, Wrapper } from './styles';\r\n\r\ninterface ICityForecastCard {\r\n  forecast: Forecast;\r\n  removeCiteHandler: (cityId: number) => void;\r\n  screenType: SCREEN_TYPES;\r\n}\r\n\r\nconst CityForecastCard = ({ forecast, removeCiteHandler, screenType }: ICityForecastCard) => {\r\n  const parseWeather = (item: ForecastList, withMargin: boolean) => {\r\n    const temperatureCelsius = item.main.temp - 273.15;\r\n    const date = new Date(item.dt_txt);\r\n    const formattedDate = date.toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit' });\r\n    const dayOfWeek = date.toLocaleDateString('en-GB', { weekday: 'short' });\r\n\r\n    return (\r\n      <ListElement key={item.dt} withMargin={withMargin} screenType={screenType}\r\n                   className={`${screenType === SCREEN_TYPES.DESKTOP ? 'text-s' : 'text-s-mob'}`}>\r\n        <Element screenType={screenType}>{formattedDate} ({dayOfWeek})</Element>\r\n        <Element screenType={screenType}>Temperature: {temperatureCelsius.toFixed(1)}°C</Element>\r\n        <Element style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                 screenType={screenType}>\r\n          <ElementImg src={`https://openweathermap.org/img/wn/${item.weather[0].icon}.png`}\r\n                      title={item.weather[0].description} alt={item.weather[0].description}\r\n                      aria-label={item.weather[0].description} />\r\n        </Element>\r\n      </ListElement>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Wrapper screenType={screenType}>\r\n      <TitleWrapper screenType={screenType}>\r\n        <Title className={`${screenType === SCREEN_TYPES.DESKTOP ? 'text-m' : 'text-m-mob'}`}>\r\n          {forecast.city.name}\r\n        </Title>\r\n        <Button onClick={() => removeCiteHandler(forecast.city.id)} text=\"Remove\"\r\n                className={`${screenType === SCREEN_TYPES.DESKTOP ? 'text-s' : 'text-s-mob'}`} />\r\n      </TitleWrapper>\r\n      <List>\r\n        {forecast.list.filter((item) => {\r\n          const date = new Date(item.dt_txt);\r\n          const hours = date.getHours();\r\n          return hours >= 10 && hours <= 14;\r\n        }).map((item, index, array) => parseWeather(item, index !== array.length - 1))}\r\n      </List>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CityForecastCard;\r\n","export type CityIds = number[];\n\nexport type LocalStorageTypes =\n    | CityIds;\n\nexport enum LOCAL_STORAGE_NAMES {\n    CITY_IDS = 'CITY_IDS',\n}\n","import styled from 'styled-components';\r\nimport { SCREEN_TYPES } from '../../hooks/useScreenSizeHook/useScreenSizeHook';\r\n\r\nexport const MainWrapper = styled.main`\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const FullScreenSection = styled.section<{ screenType: SCREEN_TYPES }>`\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    min-width: 100vw;\r\n    min-height: 100vh;\r\n\r\n    padding: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? 0.4 : 4}vw;\r\n\r\n    box-sizing: border-box;\r\n\r\n    background: linear-gradient(to bottom, #b4d9ff, #4d94ff);\r\n`;\r\n\r\nexport const ContentWrapper = styled.div<{ screenType: SCREEN_TYPES }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    max-width: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? 60 : 100}vw;\r\n`;\r\n\r\nexport const TitleWrapper = styled.div<{ screenType: SCREEN_TYPES }>`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    width: 100%;\r\n\r\n    margin: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? '0 0 0.8vw 0' : '0 0 3.2vw 0'};\r\n\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const TextWrapper = styled.div<{ screenType: SCREEN_TYPES }>`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n\r\n    width: 100%;\r\n\r\n    margin: ${({ screenType }) => screenType === SCREEN_TYPES.DESKTOP ? '0 0 0.8vw 0' : '0 0 3.2vw 0'};\r\n\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n    margin: 0;\r\n    padding: 0;\r\n`;","import React, { useEffect, useState } from 'react';\r\n\r\nimport useScreenSizeHook, { SCREEN_TYPES } from '../../hooks/useScreenSizeHook/useScreenSizeHook';\r\nimport { useAppSelector, useAppDispatch } from '../../hooks/reduxHooks/reduxHooks';\r\n\r\nimport {\r\n  searchData, forecastData,\r\n  selectState, selectSearchList, selectSelectedCities,\r\n  clearSearchList, clearSelectedCities, removeSelectedCity,\r\n} from '../../store/weatherSlice';\r\n\r\nimport SearchBar from '../../components/SearchBar/SearchBar';\r\nimport Button from '../../components/Button/Button';\r\nimport CityForecastCard from '../../components/CityForecastCard/CityForecastCard';\r\n\r\nimport { getItem, setItem } from '../../localStorage';\r\nimport { LOCAL_STORAGE_NAMES } from '../../localStorage/types';\r\n\r\nimport { MainWrapper, FullScreenSection, Title, TitleWrapper, ContentWrapper, Text, TextWrapper } from './styles';\r\n\r\nconst Main = () => {\r\n  const { screenType } = useScreenSizeHook();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const initialState = useAppSelector(selectState);\r\n  const searchList = useAppSelector(selectSearchList);\r\n  const selectedCities = useAppSelector(selectSelectedCities);\r\n\r\n  const [searchValue, setSearchValue] = useState<string>('');\r\n  const [selectedCitiesId, setSelectedCitiesId] = useState<number[]>([]);\r\n\r\n  const handleChange = async (value: string) => {\r\n    setSearchValue(value);\r\n    await dispatch(searchData(value));\r\n  };\r\n\r\n  const handleClick = async (cityId: number) => {\r\n    console.log(cityId);\r\n    const isCityAlreadySelected = selectedCitiesId.some(id => id === cityId);\r\n    if (!isCityAlreadySelected) {\r\n      setSelectedCitiesId((prevState) => ([...prevState, cityId]));\r\n      await dispatch(forecastData(cityId));\r\n    }\r\n    setSearchValue('');\r\n    setTimeout(() => dispatch(clearSearchList()), 100);\r\n  };\r\n\r\n  const removeCity = (cityId: number) => {\r\n    setSelectedCitiesId(prevState => prevState.filter(id => id !== cityId));\r\n    dispatch(removeSelectedCity(cityId));\r\n  };\r\n\r\n  const removeAllCities = () => {\r\n    dispatch(clearSelectedCities());\r\n    setSelectedCitiesId([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const cities = getItem(LOCAL_STORAGE_NAMES.CITY_IDS);\r\n    if (cities?.length) {\r\n      setSelectedCitiesId(cities ?? []);\r\n      cities.map(cityId => dispatch(forecastData(cityId)));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setItem(LOCAL_STORAGE_NAMES.CITY_IDS, selectedCitiesId);\r\n  }, [selectedCitiesId]);\r\n\r\n  return (\r\n    <MainWrapper>\r\n      <FullScreenSection screenType={screenType}>\r\n        <ContentWrapper screenType={screenType}>\r\n          <SearchBar value={searchValue} handleChange={handleChange} searchList={searchList}\r\n                     handleClick={handleClick} screenType={screenType} />\r\n\r\n          {initialState.error && (\r\n            <TextWrapper screenType={screenType}>\r\n              <Text className={`${screenType === SCREEN_TYPES.DESKTOP ? 'text-err' : 'text-err-mob'}`}>\r\n                {initialState.error}\r\n              </Text>\r\n            </TextWrapper>\r\n          )}\r\n\r\n          <TitleWrapper screenType={screenType}>\r\n            <Title className={`${screenType === SCREEN_TYPES.DESKTOP ? 'text-l' : 'text-l-mob'}`}>\r\n              {selectedCities.length > 0 ? 'List of selected cities:' : 'No selected cities, start searching'}\r\n            </Title>\r\n            {selectedCities.length > 0 &&\r\n              <Button text=\"Clear list\" onClick={removeAllCities}\r\n                      className={`${screenType === SCREEN_TYPES.DESKTOP ? 'text-s' : 'text-s-mob'}`} />}\r\n          </TitleWrapper>\r\n\r\n          {selectedCities.map((forecast) => (\r\n            <CityForecastCard key={forecast.city.id} forecast={forecast}\r\n                              removeCiteHandler={removeCity} screenType={screenType} />\r\n          ))}\r\n        </ContentWrapper>\r\n      </FullScreenSection>\r\n    </MainWrapper>\r\n  );\r\n};\r\nexport default Main;","import { LOCAL_STORAGE_NAMES, LocalStorageTypes } from './types';\n\nexport function setItem(name: LOCAL_STORAGE_NAMES, item: LocalStorageTypes): void {\n  localStorage.setItem(name, JSON.stringify(item));\n}\n\nexport function getItem(name: LOCAL_STORAGE_NAMES): LocalStorageTypes | undefined {\n  const item = localStorage.getItem(name);\n  if (item) {\n    try {\n      return JSON.parse(item);\n    } catch (err) {\n      return undefined;\n    }\n  }\n}"],"names":["SCREEN_TYPES","getWindowDimensions","width","window","innerWidth","height","innerHeight","useScreenSizeHook","windowDimensions","setWindowDimensions","useState","screenType","useEffect","timeoutId","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","TABLET","MOBILE","DESKTOP","useAppSelector","useSelector","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","_ref","Input","input","_templateObject2","_ref2","_ref3","_ref4","ListWrapper","_templateObject3","_ref5","_ref6","_ref7","_ref8","visibility","_ref9","_ref10","List","ul","_templateObject4","ListElement","li","_templateObject5","_ref11","_ref12","_ref13","withMargin","concat","ListImg","img","_templateObject6","_ref14","_ref15","DefaultElement","span","_templateObject7","_ref16","_ref17","value","handleChange","searchList","handleClick","inputRef","useRef","current","focus","_jsxs","children","_jsx","placeholder","onChange","e","target","ref","className","length","map","result","index","array","onClick","id","name","src","sys","country","toLowerCase","alt","title","button","text","TitleWrapper","Title","h2","Element","ElementImg","forecast","removeCiteHandler","city","Button","list","filter","item","hours","Date","dt_txt","getHours","parseWeather","temperatureCelsius","main","temp","date","formattedDate","toLocaleDateString","day","month","dayOfWeek","weekday","toFixed","style","display","alignItems","justifyContent","weather","icon","description","dt","LOCAL_STORAGE_NAMES","MainWrapper","FullScreenSection","section","ContentWrapper","TextWrapper","Text","Main","dispatch","useDispatch","initialState","selectState","selectSearchList","selectedCities","selectSelectedCities","searchValue","setSearchValue","selectedCitiesId","setSelectedCitiesId","removeCity","cityId","prevState","removeSelectedCity","cities","localStorage","getItem","JSON","parse","err","CITY_IDS","forecastData","setItem","stringify","SearchBar","async","searchData","console","log","some","clearSearchList","error","removeAllCities","clearSelectedCities","CityForecastCard"],"sourceRoot":""}